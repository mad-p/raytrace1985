/*

	standard texture mapping

*/


#define	EXTERN extern
#include "trace.h"

#define PI 3.14159265358979
#define sqr(x) ((x)*(x))
#define Max 255.0

VOID stripe(lc,p)
vector lc;
Primitive *p;
{
    double w1,w2;

    w1 = sin(w2 = rtof(lc+1)/4.0);
    w2 = cos(w2);
    ftor(&p->color.solid[0],Max*sqr(w1));
    ftor(&p->color.solid[1],Max*sqr(w2));

}

VOID ring(lc,p)
vector lc;
Primitive *p;
{
    double w1, w2, modf();

    w1 = rtof(lc);  w2 = rtof(lc+2);
    w1 = sqrt(sqr(w1)+sqr(w2)) / 10.0;
    w2 = PI * modf(w1, &w2);		/* &w2 is dummy */
    w1 = cos(w2);  w2 = sin(w2);
    ftor(&p->color.solid[0],Max*sqr(w1));
    ftor(&p->color.solid[1],Max*sqr(w2));

}
#expand	@	0 1 2

VOID dot(lc,p)
vector lc;
Primitive *p;
{
    double w0, w1, w2, w3, w4, w5, atan(), modf();

    w@ = rtof(lc+@);
    w@ *= sqrt(rtof(&p->param[@]));
#endexp	@
    w3 = sqrt(sqr(w1)+sqr(w3));
    w4 = 1e+15;   if(fabs(w0)>.0001) w4 = fabs(w2/w0);
    w5 = 1e+15;   if(fabs(w3)>.0001) w5 = fabs(w1/w3);
    w4 = atan(w4)*(30.0/PI);	w5 = atan(w5)*(30.0/PI);
    w4 = modf(w4, &w0);		w5 = modf(w5, &w0);	/* &w0 is dummy */
    if((w5 = .15 - sqr(.5 - w4) - sqr(.5 - w5)) < 0.0) w5 = 0.0;
    ftor(&p->color.solid[1], ((double)MAXLEVEL/.3)*w5);

}

